MmGs_etc %>% mutate(module = ifelse(MM.p <= significance_threshold & GS.p <= significance_threshold, "grey", Name))
#loop through length of list
MmGs_etc %>% mutate(module = ifelse(MM.p <= significance_threshold & GS.p <= significance_threshold, "grey", module))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
breaks = c(-Inf, significance_threshold, Inf),
labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$module)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc %>% mutate(module = ifelse(as.numeric(as.character(MM.p)) <= significance_threshold & as.numeric(as.character(GS.p)) <= significance_threshold, "grey", module))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
breaks = c(-Inf, significance_threshold, Inf),
labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$module)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc %>% mutate(module = ifelse(as.numeric(as.character(MM.p)) > significance_threshold & as.numeric(as.character(GS.p)) > significance_threshold, "grey", module))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
breaks = c(-Inf, significance_threshold, Inf),
labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$module)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
head(df.clin_outs)
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs %>% mutate(df.clin_outs$module = ifelse(significant_in_both == 1, df.clin_outs$module))
ifelse(significant_in_both == 1, df.clin_outs$module)
ifelse(df.clin_outs$significant_in_both == 1, df.clin_outs$module)
df.clin_outs %>% mutate(df.clin_outs$module = ifelse(df.clin_outs$significant_in_both == 1, df.clin_outs$module))
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs %>% mutate(module = ifelse(significant_in_both == 1, module))
?ifelse
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs %>% mutate(module = ifelse(significant_in_both == 1,"grey",module))
#loop through length of list
for (cl_oc in "FIRS"){#unique(pos_corr_list[,1])
df.clin_outs.2 <- df.clin_outs %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(df.clin_outs.2$module)))
#create significance column
# df.clin_outs.2$signMM.p <- cut(df.clin_outs.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(df.clin_outs.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$module)) +#as.character(df.clin_outs.2$module)
#geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs <- df.clin_outs %>% mutate(module = ifelse(significant_in_both == 1,"grey",module))
#loop through length of list
for (cl_oc in "FIRS"){#unique(pos_corr_list[,1])
df.clin_outs.2 <- df.clin_outs %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(df.clin_outs.2$module)))
#create significance column
# df.clin_outs.2$signMM.p <- cut(df.clin_outs.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(df.clin_outs.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$module)) +#as.character(df.clin_outs.2$module)
#geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs <- df.clin_outs %>% mutate(module = ifelse(significant_in_both == 0,"grey",module))
#loop through length of list
for (cl_oc in "FIRS"){#unique(pos_corr_list[,1])
df.clin_outs.2 <- df.clin_outs %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(df.clin_outs.2$module)))
#create significance column
# df.clin_outs.2$signMM.p <- cut(df.clin_outs.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(df.clin_outs.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$module)) +#as.character(df.clin_outs.2$module)
#geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
as.character(df.clin_outs.2$module)
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs <- df.clin_outs %>% mutate(module = ifelse(significant_in_both == 0,"red",module))
#loop through length of list
for (cl_oc in "FIRS"){#unique(pos_corr_list[,1])
df.clin_outs.2 <- df.clin_outs %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(df.clin_outs.2$module)))
#create significance column
# df.clin_outs.2$signMM.p <- cut(df.clin_outs.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(df.clin_outs.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$module)) +#as.character(df.clin_outs.2$module)
#geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
df.clin_outs$mod_col <- df.clin_outs$module
df.clin_outs.1 <- df.clin_outs.0  %>%
mutate(significant_in_both = as.numeric(as.character(GS.p.hub))*as.numeric(as.character(MM.p.hub))) %>%
mutate(hub_in_both = as.numeric(as.character(GS.hub))*as.numeric(as.character(MM.hub)))
#remove 4 cols that was summarized
df.clin_outs <- df.clin_outs.1[,-c(8,9,10,11)]
#df.clin_outs <- within(df.clin_outs, module[significant_in_both == 1 ] <- "blue")
#df.clin_outs <- within(df.clin_outs, module[hub_in_both == 1 ] <- "red")
df.clin_outs$mod_col <- df.clin_outs$module
df.clin_outs <- df.clin_outs %>% mutate(mod_col = ifelse(significant_in_both == 0,"grey",mod_col))
#loop through length of list
for (cl_oc in "FIRS"){#unique(pos_corr_list[,1])
df.clin_outs.2 <- df.clin_outs %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(df.clin_outs.2$module)))
#create significance column
# df.clin_outs.2$signMM.p <- cut(df.clin_outs.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(df.clin_outs.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$mod_col)) +#as.character(df.clin_outs.2$module)
#geom_point(alpha = 1/20, col=as.character(df.clin_outs.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc$mod_col <- MmGs_etc$module
MmGs_etc %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
breaks = c(-Inf, significance_threshold, Inf),
labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$module)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc$mod_col <- MmGs_etc$module
MmGs_etc %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col))
MmGs_etc %>% mutate(mod_col = ifelse(MM > MM_threshold & GS > MM_threshold, "red", mod_col))
MmGs_etc %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
# MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$mod_col)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc$mod_col <- MmGs_etc$module
MmGs_etc <- MmGs_etc %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col)) %>% mutate(mod_col = ifelse(MM > MM_threshold & GS > MM_threshold, "red", mod_col)) %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
# MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$mod_col)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#loop through length of list
MmGs_etc$mod_col <- MmGs_etc$module
MmGs_etc <- MmGs_etc %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col)) %>% mutate(mod_col = ifelse(MM > MM_threshold & GS > GS_threshold, "red", mod_col)) %>% mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col))
for (cl_oc in unique(pos_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(pos_corr_list,clin_out_pos_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
# MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$mod_col)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
? p.adjus
? p.adjust
nrow(MmGs_etc)
nrow(dat_expr)
ncol(dat_expr)
# make new color variable
MmGs_etc$mod_col <- MmGs_etc$module
#edit the color variable
MmGs_etc <- MmGs_etc %>%
mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col)) %>%
mutate(mod_col = ifelse(MM > MM_threshold & GS < -GS_threshold, "red", mod_col))
#loop through length of list
for (cl_oc in unique(neg_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(neg_corr_list,clin_out_neg_cor==cl_oc)[,2]) # select corresponding modules
print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
# MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$module)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
# make new color variable
MmGs_etc$mod_col <- MmGs_etc$module
#edit the color variable
MmGs_etc <- MmGs_etc %>%
mutate(mod_col = ifelse(MM.p > significance_threshold & GS.p > significance_threshold, "grey", mod_col)) %>%
mutate(mod_col = ifelse(MM > MM_threshold & GS < -GS_threshold, "red", mod_col))
#loop through length of list
for (cl_oc in unique(neg_corr_list[,1])){
MmGs_etc.2 <- MmGs_etc %>%
filter(clinical_outc==cl_oc) %>% #select only one clin out
filter(module %in% filter(neg_corr_list,clin_out_neg_cor==cl_oc)[,2]) # select corresponding modules
#print(levels(as.factor(MmGs_etc.2$module)))
#create significance column
# MmGs_etc.2$signMM.p <- cut(MmGs_etc.2$MM.p,
#            breaks = c(-Inf, significance_threshold, Inf),
#            labels = c("grey", "transparant"))
p <- ggplot(MmGs_etc.2, aes(x=MM, y=GS)) +
geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$mod_col)) +
#geom_point(alpha = 1/20, col=as.character(MmGs_etc.2$signMM.p)) +
#geom_point(alpha = 1/20, col=as.character(signMM.p)) +
geom_vline(xintercept=MM_threshold, col="darkgrey") +
geom_vline(xintercept=-MM_threshold, col="darkgrey") +
geom_hline(yintercept=GS_threshold, col="darkgrey") +
geom_hline(yintercept=-GS_threshold, col="darkgrey") +
facet_wrap( ~ as.character(module))
p <- p + labs(y = paste("Correlation with ",cl_oc,sep=""))
p <- p + labs(x = "Correlation with module eigengene")
p <- p + labs(title = paste("Gene-module versus gene-",cl_oc, " correlation", sep=""), subtitle = "Isolating hub genes")
print(p)
cat('\n\n')
tiff(paste("./plots",name_of_analysis,"/06_gene_module_vs gene_outcome_corr_",cl_oc,".tif", sep=""), height = 9, width = 9, units = 'in', res=300)
print(p)
dev.off()
}
#related_modules_and_clin_outcomes
positively_related_modules_and_clin_outcomes <- positively_related_modules_and_clin_outcomes[,c(2,1)]
negatively_related_modules_and_clin_outcomes <- negatively_related_modules_and_clin_outcomes[,c(2,1)]
kable(positively_related_modules_and_clin_outcomes, caption=Positively_related_modules_and_clin_outcomes)
library(knitr)
#related_modules_and_clin_outcomes
positively_related_modules_and_clin_outcomes <- positively_related_modules_and_clin_outcomes[,c(2,1)]
negatively_related_modules_and_clin_outcomes <- negatively_related_modules_and_clin_outcomes[,c(2,1)]
kable(positively_related_modules_and_clin_outcomes, caption=Positively_related_modules_and_clin_outcomes)
?intramodularConnectivity
colorlevels
module_col_of_int
colorh1
moduleColor
colorh1
(colorh1==whichmodule)
?exportNetworkToVisANT
dir.create(paste("./out",name_of_analysis, sep=""))
dir.create(paste("./out",name_of_analysis,"/strong_corr_with_mod_and_clin_out/from_modules_positively_corr_to_clin_out", sep=""), recursive = T)
dir.create(paste("./out",name_of_analysis,"strong_corr_with_mod_and_clin_out/from_modules_negatively_corr_to_clin_out", sep=""), recursive = T)
dir.create(paste("./out",name_of_analysis,"/strong_corr_with_mod_and_clin_out/both", sep=""), recursive = T)
dir.create(paste("./out",name_of_analysis,"/hubgenes", sep=""))
dir.create(paste("./out",name_of_analysis,"strong_corr_with_mod_and_clin_out/from_modules_negatively_corr_to_clin_out", sep=""), recursive = T)
dir.create(paste("./out",name_of_analysis,"/strong_corr_with_mod_and_clin_out/both", sep=""), recursive = T)
dir.create(paste("./out",name_of_analysis,"/strong_corr_with_mod_and_clin_out/from_modules_negatively_corr_to_clin_out", sep=""), recursive = T)
